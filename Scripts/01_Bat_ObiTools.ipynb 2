{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ObiTools"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/Users/tracykreling/Desktop/School/FISH546_Git/Sam-Metabarcoding/Data/Bat_Data\n"
     ]
    }
   ],
   "source": [
    "cd ../Desktop/School/FISH546_Git/Sam-Metabarcoding/Data/Bat_Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "#exp\tsample\tforward_primer\treverse_primer\textra\n",
      "bat\t1_S1_L001\tAGATATTGGAACWTTATATTTTATTTTTGG\tWACTAATCAATTWCCAAATCCTCC\t\n",
      "bat\t2_S2_L001\tAGATATTGGAACWTTATATTTTATTTTTGG\tWACTAATCAATTWCCAAATCCTCC\t"
     ]
    }
   ],
   "source": [
    "!head ngs_filter_bat.txt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 10:52:49,246 [import : INFO ]  obi import: imports an object (file(s), obiview, taxonomy...) into a DMS\n",
      "2021-02-28 10:52:49,259 [import : INFO ]  Opened file: 2_S2_L001_R1_001.fastq\n",
      "2021-02-28 10:52:49,404 [import : INFO ]  Importing 64274 entries\n",
      " 100.0 % |##################################################/] remain : 00:00:00\u001b[K\n",
      "2021-02-28 10:52:51,932 [import : INFO ]  Imported 64274 entries\n",
      "2021-02-28 10:52:52,085 [import : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "!obi import --fastq-input 2_S2_L001_R1_001.fastq bat/reads1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 10:52:52,442 [import : INFO ]  obi import: imports an object (file(s), obiview, taxonomy...) into a DMS\n",
      "2021-02-28 10:52:52,455 [import : INFO ]  Opened file: 2_S2_L001_R2_001.fastq\n",
      "2021-02-28 10:52:52,588 [import : INFO ]  Importing 64274 entries\n",
      " 100.0 % |##################################################/] remain : 00:00:00\u001b[K\n",
      "2021-02-28 10:52:55,168 [import : INFO ]  Imported 64274 entries\n",
      "2021-02-28 10:52:55,297 [import : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "!obi import --fastq-input 2_S2_L001_R2_001.fastq bat/reads2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:19:28,466 [import : INFO ]  obi import: imports an object (file(s), obiview, taxonomy...) into a DMS\n",
      "2021-02-28 16:19:28,482 [import : INFO ]  Opened file: ngs_filter_bat.txt\n",
      "2021-02-28 16:19:28,515 [import : INFO ]  Importing 2 entries\n",
      " 100.0 % |##################################################\\] remain : 00:00:00\u001b[K\n",
      "2021-02-28 16:19:29,576 [import : INFO ]  Imported 2 entries\n",
      "2021-02-28 16:19:29,706 [import : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "!obi import --ngsfilter ngs_filter_bat.txt bat/ngsfile"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Check what is in the file structure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:19:34,829 [ls : INFO ]  obi ls\n",
      "# DMS name: bat\n",
      "# Views:\n",
      "  # aligned_reads: Date created: Sun Feb 28 10:53:21 2021 ; Line count: 64274\n",
      "  # reads1: Date created: Sun Feb 28 10:52:49 2021 ; Line count: 64274\n",
      "  # ngsfile: Date created: Sun Feb 28 16:19:29 2021 ; Line count: 2\n",
      "  # good_sequences: Date created: Sun Feb 28 10:53:39 2021 ; Line count: 64267\n",
      "  # reads2: Date created: Sun Feb 28 10:52:52 2021 ; Line count: 64274\n",
      "# Taxonomies:\n",
      "\n"
     ]
    }
   ],
   "source": [
    "!obi ls bat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Recover the full sequeunces from the partial foward and reverse reads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:20:07,611 [alignpairedend : INFO ]  obi alignpairedend\n",
      " 100.0 % |##################################################-] remain : 00:00:00\u001b[K\n",
      "2021-02-28 16:20:16,427 [alignpairedend : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "! obi alignpairedend -R bat/reads2 bat/reads1 bat/aligned_reads"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Remove unaligned sequence records"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:20:17,633 [grep : INFO ]  obi grep\n",
      " 100.0 % |##################################################/] remain : 00:00:00\u001b[K\n",
      "2021-02-28 16:20:18,334 [grep : INFO ]  Grepped 64267 entries\n",
      "2021-02-28 16:20:18,386 [grep : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "!obi grep -a mode:alignment bat/aligned_reads bat/good_sequences"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Export aligned reads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:21:02,857 [alignpairedend : INFO ]  obi alignpairedend\n",
      " 100.0 % |##################################################\\] remain : 00:00:00\u001b[K\n",
      "2021-02-28 16:21:10,252 [alignpairedend : INFO ]  Printing to output...\n",
      " 100.0 % |##################################################/] remain : 00:00:00\u001b[K\n",
      "2021-02-28 16:21:13,054 [alignpairedend : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "!obi alignpairedend -R bat/reads2 bat/reads1 - > aligned_reads.fastq"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Assign each sequence record to the corresponding sample/marker combo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:21:38,548 [ngsfilter : INFO ]  obi ngsfilter\n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/bin/obi\", line 4, in <module>\n",
      "    __import__('pkg_resources').run_script('OBITools3==3.0.0b40', 'obi')\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/lib/python3.9/site-packages/pkg_resources/__init__.py\", line 665, in run_script\n",
      "    self.require(requires)[0].run_script(script_name, ns)\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/lib/python3.9/site-packages/pkg_resources/__init__.py\", line 1463, in run_script\n",
      "    exec(code, namespace, namespace)\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/lib/python3.9/site-packages/OBITools3-3.0.0b40-py3.9-macosx-10.9-x86_64.egg/EGG-INFO/scripts/obi\", line 62, in <module>\n",
      "    config[root_config_name]['module'].run(config)\n",
      "  File \"python/obitools3/commands/ngsfilter.pyx\", line 622, in obitools3.commands.ngsfilter.run\n",
      "  File \"python/obitools3/commands/ngsfilter.pyx\", line 179, in obitools3.commands.ngsfilter.read_info_view\n",
      "  File \"python/obitools3/dms/view/view.pyx\", line 762, in obitools3.dms.view.view.Line.__getitem__\n",
      "  File \"python/obitools3/dms/view/view.pyx\", line 258, in obitools3.dms.view.view.View.get_column\n",
      "  File \"python/obitools3/dms/column/column.pyx\", line 196, in obitools3.dms.column.column.Column.open\n",
      "KeyError: 'Cannot access to column reverse_primer in view ngsfile'\n"
     ]
    }
   ],
   "source": [
    "!obi ngsfilter -t bat/ngsfile -u bat/unidentified_sequences bat/good_sequences bat/identified_sequences"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dereplicate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Something going wrong here for some reason. I skipped the ngs filter step and maybe that is it, but it says \"Unlike the OBITools1, the OBITools3 make it possible to run ngsfilter before aligning the paired-end reads, BUT it is not recommended to do so for usual data, as ngsfilter will not be able to detect and cut out partially sequenced primers.\" And I also don't know which Illumina tags are on this sample and this command can't handle partials either so not sure what to do here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-28 16:05:34,674 [uniq : INFO ]  obi uniq\n",
      "2021-02-28 16:05:35,589 [uniq : INFO ]  First browsing through the input\n",
      "  51.0 % |#########################|                         ] remain : 00:00:00\u001b[KTraceback (most recent call last):\n",
      "  File \"python/obitools3/commands/uniq.pyx\", line 636, in obitools3.commands.uniq.run\n",
      "  File \"python/obitools3/commands/uniq.pyx\", line 357, in obitools3.commands.uniq.uniq_sequences\n",
      "KeyError: b'MERGED_sample'\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/bin/obi\", line 4, in <module>\n",
      "    __import__('pkg_resources').run_script('OBITools3==3.0.0b40', 'obi')\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/lib/python3.9/site-packages/pkg_resources/__init__.py\", line 665, in run_script\n",
      "    self.require(requires)[0].run_script(script_name, ns)\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/lib/python3.9/site-packages/pkg_resources/__init__.py\", line 1463, in run_script\n",
      "    exec(code, namespace, namespace)\n",
      "  File \"/Users/tracykreling/obitools3/obi3-env/lib/python3.9/site-packages/OBITools3-3.0.0b40-py3.9-macosx-10.9-x86_64.egg/EGG-INFO/scripts/obi\", line 62, in <module>\n",
      "    config[root_config_name]['module'].run(config)\n",
      "  File \"python/obitools3/commands/uniq.pyx\", line 638, in obitools3.commands.uniq.run\n",
      "obitools3.dms.view.view.RollbackException: obi uniq error, rollbacking view: b'MERGED_sample'\n"
     ]
    }
   ],
   "source": [
    "!obi uniq -m sample bat/good_sequences bat/dereplicated_sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-02-12 15:47:16,785 [clean_dms : INFO ]  obi clean_dms\n",
      "2021-02-12 15:47:16,789 [clean_dms : INFO ]  Done.\n"
     ]
    }
   ],
   "source": [
    "!obi clean_dms bat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
